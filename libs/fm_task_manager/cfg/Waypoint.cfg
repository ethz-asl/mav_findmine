#! /usr/bin/env python
# Take off task configuration

PACKAGE='fm_task_manager'

from task_manager_lib.parameter_generator import *

gen = TaskParameterGenerator()
#       Name                    Type            Description
#       Default    Min   Max
goal_type_enum = gen.enum([ gen.const("GOAL_TYPE_SET_ALL",         int_t, 0, "Take x, y, z, yaw from cfg."),
                            gen.const("GOAL_TYPE_FIXED_YAW",       int_t, 1, "Keep current yaw."),
                            gen.const("GOAL_TYPE_CHANGE_ALTITUDE", int_t, 2, "Only change altitude."),
                            gen.const("GOAL_TYPE_TRAJECTORY_START_XY", int_t, 3, "Go to trajectory start (XY)."),
                            gen.const("GOAL_TYPE_TRAJECTORY_START", int_t, 4, "Go to trajectory start."),
                            gen.const("GOAL_TYPE_TAKEOFF_POINT", int_t, 5, "Return to takeoff point.")],
                            "The waypoint type.")
gen.add("goal_type", int_t, 0, "The waypoint setting option.", 0, 0, 2, edit_method=goal_type_enum)

gen.add("goal_x",        double_t, 0,  "ENU X coordinate of destination",  0.)
gen.add("goal_y",        double_t, 0,  "ENU Y coordinate of destination",  0.)
gen.add("goal_z",        double_t, 0,  "ENU Z coordinate of destination",  1.2)
gen.add("goal_yaw",      double_t, 0,  "ENU yaw coordinate of destination",  0.)
gen.add("ball_radius",   double_t, 0,  "Waypoint radius in m.",  1.0)
gen.add("terminal_vel",  double_t, 0,  "Velocity check at Waypoint in m/s.",  0.5)

exit(gen.generate(PACKAGE, "task_server", "Waypoint"))
